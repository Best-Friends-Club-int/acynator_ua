<!-- script.js -->
/* ===========================
   Language (base = uk)
=========================== */
let userLang = "uk"; // –±–∞–∑–æ–≤–∞ –º–æ–≤–∞

// –¢–µ–∫—Å—Ç–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –µ–∫—Ä–∞–Ω—É
const startTranslations = {
  uk: {
    mainTitle: "–¢–≤—ñ–π –∫–∞–≤–æ–≤–∏–π –Ω–∞—Å—Ç—Ä—ñ–π",
    title: "ü§ñ –ù–∞—à –∫–∞–≤–æ–≤–∏–π AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç –ø—ñ–¥–∫–∞–∂–µ —Ç–≤–æ—é –Ω–∞—Å—Ç—É–ø–Ω—É —É–ª—é–±–ª–µ–Ω—É –∫–∞–≤—É ‚òïÔ∏è",
    text: "–í—Å—å–æ–≥–æ –∫—ñ–ª—å–∫–∞ –ø–∏—Ç–∞–Ω—å ‚Äî —ñ –º–∏ –ø—ñ–¥–±–µ—Ä–µ–º–æ —Å–º–∞–∫, —è–∫–∏–π –ø–∞—Å—É—î –¥–æ —Ç–≤–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é.",
    button: "üöÄ –ü–æ—á–∞—Ç–∏"
  },
  en: {
    mainTitle: "Your Coffee Mood",
    title: "ü§ñ Our coffee AI assistant will suggest your next favorite cup ‚òïÔ∏è",
    text: "Just a few questions ‚Äî and we‚Äôll match a coffee to your current vibe.",
    button: "üöÄ Let's go"
  }
};

// –§—Ä–∞–∑–∏ –¥–ª—è —Ñ—ñ–Ω–∞–ª—É
const endPhrases = {
  uk: [
    "üòè –ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä! –ó–∞–º–æ–≤ —ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Å—è –≤ –Ω–∞—à–æ–º—É –∫–ª—É–±—ñ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–µ –±—ñ–ª—å—à–µ!",
    "üéØ –£ —Ç–µ–±–µ —á—É–¥–æ–≤–∏–π —Å–º–∞–∫! –ß–∞—Å –∑–∞–º–æ–≤–∏—Ç–∏ –∫–∞–≤—É —Ç–∞ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏!",
    "‚òï –û—Ü–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ü—Ä–∏–¥–±–∞–π –∫–∞–≤—É —Ç–∞ —Å—Ç–∞–≤–∞–π —É—á–∞—Å–Ω–∏–∫–æ–º –∫–ª—É–±—É –∫–∞–≤–æ–≤–∏—Ö –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤.",
    "üòâ –ê —Ç–µ–ø–µ—Ä –º–µ—Ä—à—ñ–π —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –∫–∞–≤–æ–º–∞–Ω—ñ–≤!",
    "‚ú® –£ —Ç–µ–±–µ —î —Å–º–∞–∫ –¥–æ –∂–∏—Ç—Ç—è! –†–æ–∑–¥—ñ–ª–∏ –¥–æ—Å–≤—ñ–¥ –∑ –Ω–∞–º–∏ —É –∫–ª—É–±—ñ!"
  ],
  en: [
    "üòè Great choice! Order now and join our club for more perks!",
    "üéØ You‚Äôve got great taste! Time to order your coffee and join our community!",
    "‚òï That‚Äôs the result! Just one step left ‚Äî grab your coffee and sign up!",
    "üòâ One of my favorites too! Join our international coffee club!",
    "‚ú® You clearly have a taste for life! Share it with us in the club!"
  ]
};

/* ===========================
   Quiz data
=========================== */

// Fun + –∫–ª—é—á–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è (–º—É–ª—å—Ç–∏–º–æ–≤–Ω—ñ)
const questions = [
  {
    text: { uk: "üç∞ –£–ª—é–±–ª–µ–Ω–∏–π –¥–µ—Å–µ—Ä—Ç –¥–∏—Ç–∏–Ω—Å—Ç–≤–∞?", en: "üç∞ Childhood favorite dessert?" },
    answers: [
      { text: { uk: "–®–æ–∫–æ–ª–∞–¥–Ω–∏–π —Ç–æ—Ä—Ç", en: "Chocolate cake" }, tags: { choco: 2, espresso: 1 }, img: "images/dessert_choco.png" },
      { text: { uk: "–ú–∞—Ä–º–µ–ª–∞–¥", en: "Marmalade" }, tags: { fruit: 2, filter: 1 }, img: "images/dessert_marmelad.png" },
      { text: { uk: "–•–∞–ª–≤–∞", en: "Halva" }, tags: { dark: 2, moka: 1 }, img: "images/dessert_halva.png" },
      { text: { uk: "–ú–µ–¥–æ–≤–∏–∫", en: "Honey cake" }, tags: { dessert: 2, espresso: 1 }, img: "images/dessert_honey.png" }
    ]
  },
  {
    text: { uk: "üçä –Ø–∫–∏–π —Ñ—Ä—É–∫—Ç —Ç–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π?", en: "üçä Your favorite fruit?" },
    answers: [
      { text: { uk: "–Ø–≥–æ–¥–∞", en: "Berry" }, tags: { fruit: 2, filter: 1 }, img: "images/fruit_berry.png" },
      { text: { uk: "–¶–∏—Ç—Ä—É—Å", en: "Citrus" }, tags: { fruit: 2, filter: 1 }, img: "images/fruit_citrus.png" },
      { text: { uk: "–Ø–±–ª—É–∫–æ/–≥—Ä—É—à–∞", en: "Apple/Pear" }, tags: { choco: 1 }, img: "images/fruit_apple.png" },
      { text: { uk: "–°—É—Ö–æ—Ñ—Ä—É–∫—Ç–∏", en: "Dried fruits" }, tags: { dark: 2, moka: 1 }, img: "images/fruit_dry.png" }
    ]
  },
  {
    text: { uk: "üå∏ –Ø–∫—ñ –ø–∞—Ä—Ñ—É–º–∏ —Ç–æ–±—ñ –±–ª–∏–∂—á—ñ?", en: "üå∏ Which perfumes are closer to you?" },
    answers: [
      { text: { uk: "–ö–≤—ñ—Ç–∫–æ–≤—ñ", en: "Floral" }, tags: { fruit: 2 }, img: "images/perfume_flower.png" },
      { text: { uk: "–°–≤—ñ–∂—ñ —Ü–∏—Ç—Ä—É—Å–æ–≤—ñ", en: "Fresh citrus" }, tags: { fruit: 2, filter: 1 }, img: "images/perfume_citrus.png" },
      { text: { uk: "–°–æ–ª–æ–¥–∫—ñ –≥—É—Ä–º–∞–Ω—Å—å–∫—ñ", en: "Sweet gourmand" }, tags: { choco: 2 }, img: "images/perfume_sweet.png" },
      { text: { uk: "–î–µ—Ä–µ–≤–Ω—ñ/–ø—Ä—è–Ω—ñ", en: "Woody/spicy" }, tags: { dark: 2 }, img: "images/perfume_wood.png" }
    ]
  },
  // —Ñ–∞–Ω-–ø–∏—Ç–∞–Ω–Ω—è ‚Äî –±–µ–∑ –≤–∞–≥
  {
    text: { uk: "‚òÄÔ∏è –Ø–∫–∞ —Å—Ü–µ–Ω–∞ —Ç–æ–±—ñ –±–ª–∏–∂—á–∞?", en: "‚òÄÔ∏è Which scene is closer to you?" },
    answers: [
      { text: { uk: "–°–µ—Ä–µ–¥–∑–µ–º–Ω–∞ —Ñ—ñ—î—Å—Ç–∞", en: "Mediterranean fiesta" }, tags: {}, img: "images/scene_fiesta.png" },
      { text: { uk: "–ü—Ä–æ–≥—É–ª—è–Ω–∫–∞ –ø—ñ—Å–ª—è –¥–æ—â—É", en: "Walk after rain" }, tags: {}, img: "images/scene_rain.png" },
      { text: { uk: "–ó–∞—Ç–∏—à–Ω–∏–π –ø–ª–µ–¥ —ñ –∫–Ω–∏–≥–∞", en: "Cozy blanket & book" }, tags: {}, img: "images/scene_book.png" },
      { text: { uk: "–†–∞–Ω–∫–æ–≤–∏–π –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥", en: "Morning coworking" }, tags: {}, img: "images/scene_cowork.png" }
    ]
  },
  {
    text: { uk: "üç∏ –Ø–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Ç–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π?", en: "üç∏ Your favorite cocktail?" },
    answers: [
      { text: { uk: "–ê–ø–µ—Ä–æ–ª—å –®–ø—Ä–∏—Ü", en: "Aperol Spritz" }, tags: {}, img: "images/cocktail_aperol.png" },
      { text: { uk: "–ú–æ—Ö—ñ—Ç–æ", en: "Mojito" }, tags: {}, img: "images/cocktail_mojito.png" },
      { text: { uk: "–í—ñ—Å–∫—ñ-–∫–æ–ª–∞", en: "Whiskey-cola" }, tags: {}, img: "images/cocktail_whiskey.png" },
      { text: { uk: "–ï—Å–ø—Ä–µ—Å–æ –º–∞—Ä—Ç—ñ–Ω—ñ", en: "Espresso martini" }, tags: {}, img: "images/cocktail_espresso.png" }
    ]
  },
  {
    text: { uk: "üåø –Ø–∫ —Ç–∏ –ª—é–±–∏—à –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –≤–∏—Ö—ñ–¥–Ω—ñ?", en: "üåø How do you prefer weekends?" },
    answers: [
      { text: { uk: "–ü—Ä–æ–≥—É–ª—è–Ω–∫–∞", en: "Walk" }, tags: {}, img: "images/weekend_nature.png" },
      { text: { uk: "–í–µ—á—ñ—Ä–∫–∞ –∑ –¥—Ä—É–∑—è–º–∏", en: "Party with friends" }, tags: {}, img: "images/weekend_party.png" },
      { text: { uk: "–ó–∞—Ç–∏—à–Ω–∏–π –¥–µ–Ω—å –≤–¥–æ–º–∞", en: "Cozy day at home" }, tags: {}, img: "images/weekend_home.png" },
      { text: { uk: "–ü–æ–¥–æ—Ä–æ–∂ —É –Ω–æ–≤–µ –º—ñ—Å—Ç–æ", en: "Travel to a new city" }, tags: {}, img: "images/weekend_trip.png" }
    ]
  },
  // –ö–ª—é—á–æ–≤—ñ:
  {
    text: { uk: "ü´ñ –Ø–∫–∏–π –º–µ—Ç–æ–¥ –∑–∞–≤–∞—Ä—é–≤–∞–Ω–Ω—è —Ç–æ–±—ñ –±–ª–∏–∂—á–µ?", en: "ü´ñ Which brew method do you prefer?" },
    answers: [
      { text: { uk: "–§—ñ–ª—å—Ç—Ä (V60, Chemex)", en: "Filter (V60, Chemex)" }, tags: { filter: 3, fruit: 1 }, method: "filter", img: "images/brew_filter.png" },
      { text: { uk: "–ï—Å–ø—Ä–µ—Å–æ-–º–∞—à–∏–Ω–∞", en: "Espresso machine" }, tags: { espresso: 3 }, method: "espresso", img: "images/brew_espresso.png" },
      { text: { uk: "–ì–µ–π–∑–µ—Ä–Ω–∞ (Moka pot)", en: "Moka pot" }, tags: { moka: 3, dark: 1 }, method: "moka", img: "images/brew_moka.png" },
      { text: { uk: "–§—Ä–µ–Ω—á –ü—Ä–µ—Å", en: "French Press" }, tags: { immersion: 3, dessert: 1 }, method: "immersion", img: "images/brew_turkish.png" }
    ]
  },
  {
    text: { uk: "‚òï –Ø–∫–∏–π –∫–∞–≤–æ–≤–∏–π –Ω–∞–ø—ñ–π —Ç–æ–±—ñ –±–ª–∏–∂—á–µ?", en: "‚òï Which coffee drink do you prefer?" },
    answers: [
      { text: { uk: "–ï—Å–ø—Ä–µ—Å–æ", en: "Espresso" }, tags: { espresso: 2 }, drink: "espresso", img: "images/drink_espresso.png" },
      { text: { uk: "–ê–º–µ—Ä–∏–∫–∞–Ω–æ", en: "Americano" }, tags: { americano: 2 }, drink: "americano", img: "images/drink_americano.png" },
      { text: { uk: "–ê–º–µ—Ä–∏–∫–∞–Ω–æ –∑ –º–æ–ª–æ–∫–æ–º", en: "Americano with milk" }, tags: { milk: 2 }, drink: "milk", img: "images/drink_milk.png" },
      { text: { uk: "–ö–∞–ø—É—á–∏–Ω–æ", en: "Cappuccino" }, tags: { cappuccino: 2, milk: 2 }, drink: "cappuccino", img: "images/drink_cappuccino.png" }
    ]
  }
];

// –ü—Ä–æ—Ñ—ñ–ª—ñ –∫–∞–≤–∏ (—î–¥–∏–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è)
const coffeeProfiles = [
  { name: "Ethiopia Gedeb 250g", img: "images/ethiopia_gadeb.png", link: "https://bfc24.com/uk/store/product/43", tags: { fruit: 2, filter: 3, americano: 1 }, category: "filter" },
  { name: "Kenya AA Gikanda Kangocho 250g", img: "images/kenya_aa.png", link: "https://bfc24.com/uk/store/product/39", tags: { fruit: 2, filter: 3, americano: 1 }, category: "filter" },
  { name: "Brazil Mogiana 250g", img: "images/brazil_mogiana.png", link: "https://bfc24.com/uk/store/product/33", tags: { choco: 2, espresso: 3, milk: 2, cappuccino: 2, moka: 1 } },
  { name: "Colombia Excelso 250g", img: "images/colombia_excleso.png", link: "https://bfc24.com/uk/store/product/35", tags: { choco: 2, espresso: 2, milk: 1, moka: 1 } },
  { name: "Arabica Midday 250g", img: "images/midday.png", link: "https://bfc24.com/uk/store/product/45", tags: { dessert: 2, espresso: 2, milk: 2, cappuccino: 2, moka: 1 } },
  { name: "Arabica Midnight 250g", img: "images/midnight.png", link: "https://bfc24.com/uk/store/product/31", tags: { choco: 1, dessert: 2, espresso: 2, americano: 1, immersion: 1 } },
  { name: "Arabica Sunrise 250g", img: "images/sunrise.png", link: "https://bfc24.com/uk/store/product/36", tags: { dessert: 2, espresso: 2, americano: 1, milk: 1, immersion: 1, moka: 1 } },
  { name: "Arabusta Dark 250g", img: "images/dark.png", link: "https://bfc24.com/uk/store/product/29", tags: { dark: 3, espresso: 3, cappuccino: 2, moka: 2 } },
  { name: "Arabusta Amber 250g", img: "images/amber.png", link: "https://bfc24.com/uk/store/product/30", tags: { dark: 2, espresso: 2, milk: 2, cappuccino: 2, americano: 1, moka: 1 } },
  { name: "Decaf Colombia Huila 250g", img: "images/columbia_decaf.png", link: "https://bfc24.com/uk/store/product/34", tags: { classic: 2, espresso: 2, milk: 1, cappuccino: 1, americano: 1, immersion: 1 } },
  { name: "Ethiopia Aleta Wondo 250g", img: "images/ethiopia_aleta.png", link: "https://bfc24.com/uk/store/product/32", tags: { fruit: 2, filter: 2, espresso: 1 }, category: "filter" },
  { name: "Brazil Fazenda Pedra Grande 250g", img: "images/brazil_fazenda.png", link: "https://bfc24.com/uk/store/product/41", tags: { choco: 2, espresso: 2, moka: 1 } },
  { name: "Colombia Cauca Popayan 250g", img: "images/colombia_cauca.png", link: "https://bfc24.com/uk/store/product/40", tags: { choco: 2, fruit: 1, espresso: 2 } },
  { name: "Mexico El Buho 250g", img: "images/mexico_el_buho.png", link: "https://bfc24.com/uk/store/product/38", tags: { choco: 1, dark: 1, espresso: 2, americano: 1 } }
];

// –¥–≤–∞ —Ñ—ñ–ª—å—Ç—Ä-–≤–∞—Ä—ñ–∞–Ω—Ç–∏
const FILTER_ONLY_TWO = ["Ethiopia Gedeb 250g", "Kenya AA Gikanda Kangocho 250g"];

/* ===========================
   State & elements
=========================== */
let currentQ = 0;
let userProfile = {};
let selectedMethod = null;
let selectedDrink = null;

const langScreen = document.getElementById("lang-screen");
const startScreen = document.getElementById("start-screen");
const quizEl = document.getElementById("quiz");
const resultEl = document.getElementById("result");
const startBtn = document.getElementById("startBtn");

/* ===========================
   Helpers
=========================== */
function $(sel, root = document) { return root.querySelector(sel); }
function addTags(tags) {
  for (const [k, v] of Object.entries(tags || {})) {
    if (!userProfile[k]) userProfile[k] = 0;
    userProfile[k] += v;
  }
}
function cacheBust(src) {
  const sep = src.includes("?") ? "&" : "?";
  return `${src}${sep}t=${Date.now()}`;
}

// 1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ref –∑ –ø–µ—Ä—à–æ–≥–æ –∑–∞—Ö–æ–¥—É (—è–∫—â–æ –≤—ñ–Ω –±—É–≤)
(function persistRefOnce(){
  const qs = new URLSearchParams(window.location.search);
  const incomingRef = qs.get("ref");
  if (incomingRef) localStorage.setItem("coffeeQuizRef", incomingRef);
})();

// 2) –î—ñ—Å—Ç–∞—î–º–æ ref (–ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: URL -> localStorage -> 'quiz')
function getRefParam() {
  const qp = new URLSearchParams(window.location.search);
  return qp.get("ref") || localStorage.getItem("coffeeQuizRef") || "quiz";
}

// 3) –ë—É–¥—É—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: –≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ –¥—É–±–ª—ñ–∫–∞—Ç–∏ ref/t —ñ –¥–æ–¥–∞—î–º–æ —Å–≤—ñ–∂—ñ
function buildRefLink(baseUrl, extra = {}) {
  try {
    const u = new URL(baseUrl);            // –∞–±—Å–æ–ª—é—Ç–Ω—ñ https://... ‚Äî –ø—Ä–∞—Ü—é—î —Å—Ç–∞–±—ñ–ª—å–Ω–æ
    // —á–∏—Å—Ç–∏–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    u.searchParams.delete("ref");
    u.searchParams.delete("t");
    // –¥–æ–¥–∞—î–º–æ –Ω–∞—à ref + –∞–Ω—Ç–∏-–∫–µ—à
    u.searchParams.set("ref", getRefParam());
    u.searchParams.set("t", Date.now().toString());
    // –¥–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫—ñ (–∑–∞ –ø–æ—Ç—Ä–µ–±–∏)
    Object.entries(extra).forEach(([k, v]) => u.searchParams.set(k, v));
    return u.toString();
  } catch (e) {
    // –Ø–∫—â–æ —Ä–∞–ø—Ç–æ–º –≤—ñ–¥–Ω–æ—Å–Ω–∏–π URL (–Ω–µ –Ω–∞—à –≤–∏–ø–∞–¥–æ–∫), —Ä–æ–±–∏–º–æ fallback
    const hasQ = baseUrl.includes("?");
    const clean = baseUrl
      .replace(/[?&]ref=[^&#]*/gi, "")
      .replace(/[?&]t=\d+/gi, "")
      .replace(/[?&]+$/, "");
    const sep = clean.includes("?") ? "&" : (hasQ ? "" : "?");
    const params = new URLSearchParams({ ref: getRefParam(), t: Date.now().toString(), ...extra }).toString();
    return clean + sep + params;
  }
}

function t(obj) {
  return typeof obj === "string" ? obj : (obj?.[userLang] || obj?.uk || obj?.en || "");
}

/* ===========================
   Language selection
=========================== */
function applyStartTexts() {
  $("#main-title").textContent = startTranslations[userLang].mainTitle;
  startScreen.querySelector("h2").textContent = startTranslations[userLang].title;
  startScreen.querySelector("p").textContent = startTranslations[userLang].text;
  startBtn.textContent = startTranslations[userLang].button;
}

function selectLanguage(lang) {
  userLang = (lang === "en") ? "en" : "uk"; // —Ç—ñ–ª—å–∫–∏ uk/en
  localStorage.setItem("coffeeQuizLang", userLang);
  langScreen.classList.add("hidden");
  applyStartTexts();
  startScreen.classList.remove("hidden");
}

/* ===========================
   Render: Question & Result
=========================== */
function showQuestion() {
  // —è–∫—â–æ –≤–∂–µ –≤–∏–±—Ä–∞–Ω–æ filter —ñ –ø–æ—Ç–æ—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –ø—Ä–æ –Ω–∞–ø—ñ–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  if (selectedMethod === "filter" && questions[currentQ]?.answers?.some(a => a.drink)) {
    showResult();
    return;
  }

  const q = questions[currentQ];
  if (!q) { showResult(); return; }

  quizEl.innerHTML = `<h2>${t(q.text)}</h2>`;
  const g = document.createElement("div");
  g.className = "gallery";

  q.answers.forEach(a => {
    const card = document.createElement("div");
    card.className = "gallery-item";
    const imgSrc = cacheBust(a.img);
    card.innerHTML = `<img src="${imgSrc}" alt=""><p>${t(a.text)}</p>`;
    card.onclick = () => {
      addTags(a.tags);
      if (a.method) selectedMethod = a.method;
      if (a.drink) selectedDrink = a.drink;

      currentQ++;
      if (currentQ < questions.length) {
        showQuestion();
      } else {
        showResult();
      }
    };
    g.appendChild(card);
  });

  quizEl.appendChild(g);
}

function showResult() {
  let coffees = [...coffeeProfiles];

  // –û—Å–æ–±–ª–∏–≤–∏–π —Ä–µ–∂–∏–º –¥–ª—è filter: –ª–∏—à–µ –¥–≤—ñ —Ñ—ñ–ª—å—Ç—Ä-–∫–∞–≤–∏
  if (selectedMethod === "filter") {
    const filterCoffees = coffees
      .filter(c => c.category === "filter" && FILTER_ONLY_TWO.includes(c.name));

    const main = filterCoffees[0] || coffees.find(c => FILTER_ONLY_TWO.includes(c.name));
    const alt = filterCoffees[1];

    renderFinal(main, alt ? [alt] : []);
    return;
  }

  // –§—ñ–ª—å—Ç—Ä-–∫–∞–≤–∏ –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏ milk/cappuccino
  if (selectedDrink === "milk" || selectedDrink === "cappuccino") {
    coffees = coffees.filter(c => c.category !== "filter");
  }

  // –ü—Ä–∏ –µ—Å–ø—Ä–µ—Å–æ ‚Äî –¥—É–∂–µ —Ä—ñ–¥–∫–æ (10%) –ø–æ–∫–∞–∑—É—î–º–æ filter
  if (selectedDrink === "espresso") {
    if (Math.random() > 0.1) coffees = coffees.filter(c => c.category !== "filter");
  }

  // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Å–∫–æ—Ä—É
  const scored = coffees.map(c => {
    let s = 0;
    for (const [tag, weight] of Object.entries(userProfile)) {
      if (c.tags[tag]) s += Math.min(weight, c.tags[tag]);
    }
    return { ...c, score: s };
  }).sort((a, b) => b.score - a.score);

  const main = scored[0];
  const recs = scored.slice(1, 3);
  renderFinal(main, recs);
}

function renderFinal(mainCoffee, recList) {
  if (!mainCoffee) {
    mainCoffee = coffeeProfiles.find(c => c.name === FILTER_ONLY_TWO[0]) || coffeeProfiles[0];
  }

  const phraseArr = endPhrases[userLang] || endPhrases.uk;
  const phrase = phraseArr[Math.floor(Math.random() * phraseArr.length)];
  const btnText = (userLang === "uk") ? "–ó–∞–º–æ–≤–∏—Ç–∏" : "Order";
  const alsoText = (userLang === "uk") ? "‚ú® –í–∞–º —Ç–∞–∫–æ–∂ –º–æ–∂–µ —Å–ø–æ–¥–æ–±–∞—Ç–∏—Å—è:" : "‚ú® You may also like:";

  const mainLink = buildRefLink(mainCoffee.link);

  let html = `
    <h2>${mainCoffee.name}</h2>
    <img src="${cacheBust(mainCoffee.img)}" alt="${mainCoffee.name}">
    <div class="final-phrase">${phrase}</div>
    <a href="${mainLink}" target="_blank" rel="noopener">
      <button>‚òï ${btnText}</button>
    </a>
  `;

  if (recList && recList.length) {
    html += `<h3>${alsoText}</h3><div class="gallery">`;
    recList.forEach(c => {
      const lnk = buildRefLink(c.link);
      html += `
        <a href="${lnk}" target="_blank" rel="noopener" class="gallery-item">
          <img src="${cacheBust(c.img)}" alt="${c.name}">
          <p>${c.name}</p>
        </a>
      `;
    });
    html += `</div>`;
  }

  resultEl.innerHTML = html;
  quizEl.classList.add("hidden");
  resultEl.classList.remove("hidden");
}

/* ===========================
   Bootstrapping
=========================== */
function initLanguageButtons() {
  document.querySelectorAll(".btn-lang").forEach(btn => {
    btn.addEventListener("click", () => {
      const lang = btn.getAttribute("data-lang");
      selectLanguage(lang);
    });
  });
}

function initStartButton() {
  startBtn.addEventListener("click", () => {
    startScreen.classList.add("hidden");
    resultEl.classList.add("hidden");
    quizEl.classList.remove("hidden");

    // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É
    currentQ = 0;
    userProfile = {};
    selectedMethod = null;
    selectedDrink = null;

    showQuestion();
  });
}

(function bootstrap() {
  const saved = localStorage.getItem("coffeeQuizLang");
  if (saved === "uk" || saved === "en") {
    userLang = saved;
    langScreen.classList.add("hidden");
    applyStartTexts();
    startScreen.classList.remove("hidden");
  } else {
    langScreen.classList.remove("hidden");
  }

  initLanguageButtons();
  initStartButton();
})();